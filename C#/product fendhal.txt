      -------------------------------class*product_store----------------------------------------------------

namespace product_store
{
    public static class productstore
    {
        private static string connectionString = "server=OREO\\SQLEXPRESS;integrated security=true;database=fendhl;";
        //method to cre.Zate connection
        public static SqlConnection GetConnection()
        {
            SqlConnection con = new SqlConnection(connectionString);
            try
            {
                con.Open();
                return con;
            }
            catch (Exception ex)

            {
                return null;
            }
            finally
            {
               // con.Close();
            }
        }

        //method to return product category
        public static DataSet GettableProductCategory()
        {
            SqlConnection con = GetConnection();
            string query = "select * from ProductCategory";
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter(query, con);
            da.Fill(ds, "tableProductCategory");
            return ds;
        }
        //method to return product name for given product type name
        public static DataSet GettableProductName(string Product_type_Name)
        {
            SqlConnection con = GetConnection();
            string query = "select p.Product_id,  p.Product_Name from Products p inner join ProductCategory t on p.ProductTypeId = t.Product_Category_Id   where t.Product_type_Name = @product_type_name";
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter(query, con);
            da.SelectCommand.Parameters.AddWithValue("@product_type_name", Product_type_Name);
            da.Fill(ds, "tableProducts");
            return ds;

        }
        //method to return gstdetails for given product name
        public static DataSet GetGstDetails(string product_type_name)
        {
            SqlConnection con = GetConnection();
            string query = "select a.cgst,a.sgst,a.igst from ProductGstDetails a inner join ProductCategory b on a.Product_Gst_Id=b.Product_Gst_id where b.Product_type_Name=@product_type_name";
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter(query, con);
            da.SelectCommand.Parameters.AddWithValue("@product_type_name", product_type_name);
            da.Fill(ds, "ProductCategory");
            return ds;
        }
        public static DataSet GetProductPrice(string Product_Name)
        {
            SqlConnection con = GetConnection();
            string query = "select Price from Products where Product_Name=@Product_Name";
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter(query, con);
            da.SelectCommand.Parameters.AddWithValue("@product_name", Product_Name);
            da.Fill(ds, "products");
            return ds;

        }



        //method to save record inside invoice table
        public static string saveTableInvoiceDetails1(string customer_name, string customer_contact, int product_category_id, int product_id, int residential_type_id, DateTime invoice_date , decimal quantity, decimal price, decimal cgst, decimal sgst, decimal igst, decimal cgst_value, decimal sgst_value, decimal igst_value, decimal total_amount)
        {
            string result = null;
            // System.Windows.Forms.MessageBox.Show(invoice_date.ToString());
            string query = "insert into InvoiceDetails1 values(@customer_name, @customer_contact, @product_category_id, @product_id, @residential_type_id, @invoice_date, @quantity, @price, @cgst, @sgst, @igst, @cgst_value, @sgst_value,@igst_value,@total_amount)";
            SqlConnection con = GetConnection();
          
            SqlCommand command = new SqlCommand(query, con);
            command.Parameters.AddWithValue("@customer_name", customer_name);
            command.Parameters.AddWithValue("@customer_contact", customer_contact);
            command.Parameters.AddWithValue("@product_category_id", product_category_id);
            command.Parameters.AddWithValue("@product_id", product_id);
            command.Parameters.AddWithValue("@residential_type_id", residential_type_id);
            command.Parameters.AddWithValue("@invoice_date", invoice_date);
            command.Parameters.AddWithValue("@quantity", quantity);
            command.Parameters.AddWithValue("@price", price);
            command.Parameters.AddWithValue("@cgst", cgst);
            command.Parameters.AddWithValue("@sgst", sgst);
            command.Parameters.AddWithValue("@igst", igst);
            command.Parameters.AddWithValue("@cgst_value", cgst_value);
            command.Parameters.AddWithValue("@sgst_value", sgst_value);
            command.Parameters.AddWithValue("@igst_value", igst_value);
            command.Parameters.AddWithValue("@total_amount", total_amount);
            try

            {
                command.ExecuteNonQuery();
                result = "record saved successfullly";
            }
            catch (Exception ex)
            {
                result = ex.ToString();
            }
            finally
            {
                con.Close();
            }
            return result;

        }

    }

}
-------------------------------------form--------------------------------------------------------

    namespace product_store
{
    public partial class Form1 : Form
    {
        //creating an enum Nationality
        enum Nationality { Indian, NRI }
      
        Nationality nationality; // datatype is enum so it can store only indian or nri value only
        int cgst = 0;
        int sgst = 0;
        int igst = 0;
        int tgst = 0;
        public Form1()
        {
            InitializeComponent();
            //code to set date
            dateTimePicker1.Value = DateTime.Today;
            dateTimePicker1.MinDate = DateTime.Today;
        }
        // code to accept only numbers
        private void textBox2_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsControl(e.KeyChar) && !char.IsDigit(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void textBox9_KeyPress(object sender, KeyPressEventArgs e)
        {
            if (!char.IsControl(e.KeyChar) && !char.IsDigit(e.KeyChar))
            {
                e.Handled = true;
            }
        }

        private void textBox9_TextChanged(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            DataSet ds = productstore.GettableProductCategory();
            comboBox1.DataSource = ds.Tables[0];
            comboBox1.DisplayMember = "Product_type_Name";
            comboBox1.ValueMember = "Product_Category_Id";
        }


        private void comboBox1_KeyPress(object sender, KeyPressEventArgs e)
        {

        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            DataSet ds = productstore.GettableProductName(comboBox1.Text);
            comboBox2.DataSource = ds.Tables[0];
            comboBox2.DisplayMember = "Product_Name";
            comboBox2.ValueMember = "Product_id";

            //filling the gst textboxes
            DataSet ds1 = productstore.GetGstDetails(comboBox1.Text);
            foreach (DataRow dr in ds1.Tables[0].Rows)
            {
               
                cgst = Convert.ToInt32(dr["cgst"].ToString());
                sgst = Convert.ToInt32(dr["sgst"].ToString());
                igst = Convert.ToInt32(dr["igst"].ToString());
            }
            //code for cgst sgst
            //if (radioButton1.Checked)

            if (nationality == 0) //ie nationality is indian means value is 0

            {
                //if nationality is indian the totalgst is sum of cgst and sgst
                tgst = cgst + sgst;
            }
            else// nationality is nri  
            { 
                tgst = igst; // totalgst is only igst not sum 
            }
            textBox3.Text = cgst.ToString();
            textBox4.Text = sgst.ToString();
            textBox5.Text = tgst.ToString();
        }
       
        private void dateTimePicker1_ValueChanged(object sender, EventArgs e)
        {

        }

        private void textBox10_TextChanged(object sender, EventArgs e)
        {
            if (textBox10.Text == "")
            {
            }
            else
            {
                calculate_total();
            }
        }
        public void calculate_total()
        {
            double totalamount = Convert.ToDouble(textBox9.Text) * Convert.ToDouble(textBox10.Text);
            textBox11.Text = totalamount.ToString();
            double cgstamount = Convert.ToDouble(textBox9.Text) * (Convert.ToDouble(textBox3.Text) / 100.0);
            textBox6.Text = cgstamount.ToString();
            double sgstamount = Convert.ToDouble(textBox9.Text) * (Convert.ToDouble(textBox4.Text) / 100.0);
            textBox7.Text = sgstamount.ToString();
            double igstamount = Convert.ToDouble(textBox9.Text) * (Convert.ToDouble(textBox5.Text) / 100.0);
            textBox8.Text = igstamount.ToString();
            //double netamount = Convert.ToDouble(textBox11.Text) + Convert.ToDouble(textBox8.Text);
            //textBox12.Text = netamount.ToString();
            double netamount = 0;

            if (nationality == 0)
            {
                netamount = Convert.ToDouble(textBox8.Text) + Convert.ToDouble(textBox11.Text);
            }
            else
            {
                netamount = Convert.ToDouble(textBox8.Text) + Convert.ToDouble(textBox11.Text);
            }
            textBox12.Text = netamount.ToString();
           
        }

        public void ClearAll()
        {
            textBox1.Clear();
            textBox2.Clear();
            textBox3.Clear();
            textBox4.Clear();
            textBox5.Clear();
            textBox6.Clear();
            textBox7.Clear();
            textBox8.Clear();
            textBox9.Clear();
            textBox10.Clear();
            textBox11.Clear();
            textBox12.Clear();

        }
       




        private void textBox10_KeyPress(object sender, KeyPressEventArgs e)
        {

        }

        private void comboBox2_SelectedIndexChanged(object sender, EventArgs e)
        {
            //filling the product price
            DataSet ds1 = productstore.GetProductPrice(comboBox2.Text);
            foreach (DataRow dr in ds1.Tables[0].Rows)
            {
                textBox9.Text = dr["Price"].ToString();

            }
        }

        private void radioButton1_CheckedChanged(object sender, EventArgs e)
        {
            nationality = Nationality.Indian;
            // MessageBox.Show(nationality.ToString());
            textBox3.Text = cgst.ToString();
            textBox4.Text = sgst.ToString();
            textBox5.Text = Convert.ToString(Convert.ToInt32(textBox3.Text) + Convert.ToInt32(textBox4.Text));
            calculate_total();
        }


            private void radioButton2_CheckedChanged(object sender, EventArgs e)
            {
            nationality = Nationality.NRI;
            // MessageBox.Show(nationality.ToString());
            textBox3.Text = cgst.ToString();
            textBox4.Text = sgst.ToString();
            textBox5.Text = igst.ToString();
            calculate_total();
            }

        private void textBox3_TextChanged(object sender, EventArgs e)
        {

            
        }

        private void button1_Click(object sender, EventArgs e)
        {
            checkuserdetails();

        }
        public void checkuserdetails()
        {
            if (textBox1.Text == "" || textBox2.Text == "")
            {
                MessageBox.Show("please fill all the details");
            }
            else if (textBox3.Text == "0")
            {
                MessageBox.Show("quantity cannot be zero");
            }
            else
            {
                string result = productstore.saveTableInvoiceDetails1(textBox1.Text, textBox2.Text, Convert.ToInt32(comboBox1.SelectedValue), Convert.ToInt32(comboBox2.SelectedValue), Convert.ToInt32(nationality), dateTimePicker1.Value, Convert.ToDecimal(textBox10.Text), Convert.ToDecimal(textBox9.Text),Convert.ToDecimal(textBox3.Text), Convert.ToDecimal(textBox4.Text), Convert.ToDecimal(textBox5.Text), Convert.ToDecimal(textBox6.Text), Convert.ToDecimal(textBox7.Text), Convert.ToDecimal(textBox8.Text),Convert.ToDecimal(textBox11.Text));

                MessageBox.Show(result);

               
            }
            
        }
        private void textBox8_TextChanged(object sender, EventArgs e)




        {
        }


        private void button2_Click(object sender, EventArgs e)
        {
        }

        private void textBox12_TextChanged(object sender, EventArgs e)
        {

        }

        private void label13_Click(object sender, EventArgs e)
        {

        }

        private void textBox6_TextChanged(object sender, EventArgs e)
        {

        }

        private void button2_Click_1(object sender, EventArgs e)
        {
            ClearAll();
        }

        private void radioButton1_CheckedChanged_1(object sender, EventArgs e)
        {
            nationality = Nationality.Indian;
            // MessageBox.Show(nationality.ToString());
            textBox3.Text = cgst.ToString();
            textBox4.Text = sgst.ToString();
            textBox5.Text = Convert.ToString(Convert.ToInt32(textBox3.Text) + Convert.ToInt32(textBox4.Text));
            calculate_total();
        }
    }
}

    

